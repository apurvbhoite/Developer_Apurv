Q.1 :  When you post a message on Facebook, depending on the number of people who 
like your post, Facebook displays different information.

If no one likes your post, it doesn't display anything.
If only one person likes your post, it displays: [Friend's Name] likes your post.
If two people like your post, it displays: [Friend 1] and [Friend 2] like your post.
If more than two people like your post, it displays: [Friend 1], [Friend 2] and 
[Number of Other People] others like your post.
Write a program and continuously ask the user to enter different names, 
until the user presses Enter (without supplying a name). Depending on the number of 
names provided, display a message based on the above pattern.

solution : 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Exercise3._1
{
    class Program
    {

        static void Main(string[] args)
        {
            var names = new List<string>();
            while (true)
            {
                var input = Console.ReadLine();
                var a = String.IsNullOrWhiteSpace(input);
                if (a)
                {
                    break;
                }
                else
                {
                    names.Add(input);
                }
            }
            if (names.Count > 2)
            {
                Console.WriteLine("{0}, {1} and {2} others liked your post", names[0], names[1], names.Count - 2);
                Console.ReadKey();
            }
                   
            else if (names.Count == 2)
            {
                Console.WriteLine("{0} and {1} liked your post", names[0], names[1]);
                Console.ReadKey();
            }
                
            else if (names.Count == 1)
            {
                Console.WriteLine("{0} liked your post.", names[0]);
                Console.ReadKey();
            }
                
            else
                    Console.WriteLine();

            }


        }
    }

Q.2 : Write a program and ask the user to enter their name. Use an array to reverse the 
name and then store the result in a new string. Display the reversed name on the console.

solution : 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Exercise3._2
{
    class Program
    {
        static void Main(string[] args)
        {
            string Name = Console.ReadLine();

            var array = new char[Name.Length];
            for (var i = Name.Length; i > 0; i--)
                array[Name.Length - i] = Name[i - 1];

            var reversed = new string(array);
            Console.WriteLine("Reversed name: " + reversed);
        }
    }
}

Q.3 :  Write a program and ask the user to enter 5 numbers. If a number has been 
previously entered, display an error message and ask the user to re-try. Once the user 
successfully enters 5 unique numbers, sort them and display the result on the console.

solution : 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Exercise3._3._1
{
    class Program
    {
        static void Main(string[] args)
        {
            var Numbers = new List<int>();
            for( int i = 0; i< 5; i++ )
            {
                var buffer = Convert.ToInt32(Console.ReadLine());
                if(Numbers.Contains(buffer))
                {
                    Console.WriteLine("Number exist in list, reenter another number");
                    i--;
                    continue;
                }
                else
                {
                    Numbers.Add(buffer);
                }
            }
            Numbers.Sort();
            foreach(var number in Numbers)
            {
                Console.WriteLine(number);
            }

        }
    }
}




4- Write a program and ask the user to continuously enter a number or type "Quit" to exit.
The list of numbers may include duplicates. Display the unique numbers that the user has entered.

Solution : 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Exercise3._4
{
    class Program
    {
        static void Main(string[] args)
        {
            var inputs = new List<int>();
            while(true)
            {
                var buffer = Console.ReadLine();
                if (buffer.ToLower() == "quit")
                {
                    break;
                }
                else
                {
                    if (inputs.Contains(Convert.ToInt32(buffer)))
                    {
                        continue;
                    }
                    else
                        inputs.Add(Convert.ToInt32(buffer));

                }

            }
            Console.WriteLine("numbers are");
            for (int i = 0; i < inputs.Count; i++)
                Console.WriteLine(inputs[i]);
        }
    }
}


5- Write a program and ask the user to supply a list of comma separated numbers
 (e.g 5, 1, 9, 2, 10). If the list is empty or includes less than 5 numbers, 
display "Invalid List" and ask the user to re-try; otherwise, display the 3 smallest numbers in the list.

solution : 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Exercise3._5
{
    class Program
    {    
        //ref
        //IList<string> strings = new List<string> { "1", "2", "testing" };
        //string joined = string.Join(",", strings);
        static void Main(string[] args)
        {
            string[] elements;
            while (true)
            {
                Console.Write("Enter a list of comma-separated numbers: ");
                var input = Console.ReadLine();

                if (!String.IsNullOrWhiteSpace(input))
                {
                    elements = input.Split(',');
                    if (elements.Length >= 5)
                        break;
                }

                Console.WriteLine("Invalid List");
            }

            var numbers = new List<int>();
            foreach (var number in elements)

                numbers.Add(Convert.ToInt32(number));

            var smallests = new List<int>();
            while (smallests.Count < 3)
            {
                // Assume the first number is the smallest
                var min = numbers[0];
                foreach (var number in numbers)
                {
                    if (number < min)
                        min = number;
                }
                smallests.Add(min);

                numbers.Remove(min);
            }

            Console.WriteLine("The 3 smallest numbers are: ");
            foreach (var number in smallests)
                Console.WriteLine(number);
   

        }
    }
}
